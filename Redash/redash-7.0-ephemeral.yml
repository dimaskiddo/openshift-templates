kind: Template
apiVersion: v1
metadata:
  name: redash-ephemeral
  annotations:
    openshift.io/display-name: 'Redash Dashboard (Ephemeral)'
    description: "Redash Dashboard. This template will create service without persistent storage."
    tags: "dashboard,redash"
    iconClass: "icon-datavirt"

parameters:
  - name: REDASH_NAME
    displayName: "Redash Name"
    description: "A reference to Redash name."
    from: "[a-zA-Z0-9]{10}"
    value: "redash"
    required: true

  - name: REDASH_MEMORY_LIMIT
    displayName: "Redash Memory Limit"
    description: "Maximum amount of memory the Redash can use."
    value: "512Mi"
    required: true

  - name: REDASH_DOMAIN_URL
    displayName: "Redash Domain URL"
    description: "A reference to Redash domain URL."
    from: "[a-zA-Z0-9]{100}"
    required: true

  - name: REDASH_COOKIE_SECRET
    displayName: "Redash Cookie Secret"
    description: "A reference to Redash cookie secret."
    from: "[a-zA-Z0-9]{32}"
    generate: expression
    required: true

  - name: REDASH_MAIL_SERVER
    displayName: "Redash Mail Server"
    description: "A reference to Redash Mail Server."
    value: ""

  - name: REDASH_MAIL_PORT
    displayName: "Redash Mail Port"
    description: "A reference to Redash Mail Port."
    from: "[0-9]{5}"
    value: ""

  - name: REDASH_MAIL_USE_SSL
    displayName: "Redash Mail Use SSL"
    description: "A reference to Redash Mail use SSL. Use value True or False."
    value: "True"

  - name: REDASH_MAIL_USE_TLS
    displayName: "Redash Mail Use TLS"
    description: "A reference to Redash Mail use TLS. Use value True or False."
    value: "False"

  - name: REDASH_MAIL_USERNAME
    displayName: "Redash Mail Server Username"
    description: "Username that will be used by Redash for accessing the mail server."
    value: ""

  - name: REDASH_MAIL_PASSWORD
    displayName: "Redash Mail Server Password"
    description: "Password that will be used by Redash for accessing the mail server."
    value: ""

  - name: REDASH_MAIL_DEFAULT_SENDER
    displayName: "Redash Mail Server Default Sender"
    description: "Default sender that will be used by Redash to send the mail."
    value: ""

  - name: REDASH_POSTGRESQL_USER
    displayName: "Redash PostgreSQL Username"
    description: "Username for PostgreSQL user that will be used by Redash for accessing the database."
    from: "user[A-Z0-9]{3}"
    generate: expression
    required: true

  - name: REDASH_POSTGRESQL_PASSWORD
    displayName: "Redash PostgreSQL Password"
    description: "Password for PostgreSQL user that will be used by Redash for accessing the database."
    from: "[A-Z0-9]{16}"
    generate: expression
    required: true

  - name: REDASH_POSTGRESQL_DATABASE
    displayName: "Redash PostgreSQL Database Name"
    description: "Database Name for PostgreSQL user that will be used by Redash."
    value: "redash"
    required: true

  - name: REDASH_POSTGRESQL_MEMORY_LIMIT
    displayName: "Redash PostgreSQL Memory Limit"
    description: "Maximum amount of memory the Redash PostgreSQL can use."
    value: "512Mi"
    required: true

  - name: REDASH_REDIS_PASSWORD
    displayName: "Redash Redis Password"
    description: "Password for Redis that will be used by Redash for accessing the database."
    from: "[A-Z0-9]{16}"
    generate: expression
    required: true

  - name: REDASH_REDIS_MEMORY_LIMIT
    displayName: "Redash Redis Memory Limit"
    description: "Maximum amount of memory the Redash Redis can use."
    value: "512Mi"
    required: true

objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${REDASH_NAME}-postgresql
    stringData:
      POSTGRESQL_USER: ${REDASH_POSTGRESQL_USER}
      POSTGRESQL_PASSWORD: ${REDASH_POSTGRESQL_PASSWORD}
      POSTGRESQL_DATABASE: ${REDASH_POSTGRESQL_DATABASE}

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${REDASH_NAME}-redis
    stringData:
      REDIS_PASSWORD: ${REDASH_REDIS_PASSWORD}

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${REDASH_NAME}-config
    stringData:
      REDASH_REDIS_URL: redis://:${REDASH_REDIS_PASSWORD}@${REDASH_NAME}-redis:6379/0
      REDASH_DATABASE_URL: postgresql://${REDASH_POSTGRESQL_USER}:${REDASH_POSTGRESQL_PASSWORD}@${REDASH_NAME}-postgresql/${REDASH_POSTGRESQL_DATABASE}
      REDASH_HOST: ${REDASH_DOMAIN_URL}
      REDASH_COOKIE_SECRET: ${REDASH_COOKIE_SECRET}

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${REDASH_NAME}-mailer
    stringData:
      REDASH_MAIL_SERVER: ${REDASH_MAIL_SERVER}
      REDASH_MAIL_PORT: ${REDASH_MAIL_PORT}
      REDASH_MAIL_USE_SSL: ${REDASH_MAIL_USE_SSL}
      REDASH_MAIL_USE_TLS: ${REDASH_MAIL_USE_TLS}
      REDASH_MAIL_USERNAME: ${REDASH_MAIL_USERNAME}
      REDASH_MAIL_PASSWORD: ${REDASH_MAIL_PASSWORD}
      REDASH_MAIL_DEFAULT_SENDER: ${REDASH_MAIL_DEFAULT_SENDER}

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${REDASH_NAME}-postgresql
    spec:
      ports:
      - name: postgresql
        port: 5432
        protocol: TCP
        targetPort: 5432
      selector:
        name: ${REDASH_NAME}-postgresql

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${REDASH_NAME}-redis
    spec:
      ports:
      - name: redis
        port: 6379
        protocol: TCP
        targetPort: 6379
      selector:
        name: ${REDASH_NAME}-redis

  - kind: Service
    apiVersion: v1
    metadata:
      name: "${REDASH_NAME}-web"
    spec:
      ports:
        - name: redash
          port: 5000
          protocol: TCP
          targetPort: 5000
      selector:
        name: "${REDASH_NAME}-web"

  - kind: Route
    apiVersion: v1
    metadata:
      name: "${REDASH_NAME}-web"
    spec:
      host: ${REDASH_DOMAIN_URL}
      to:
        kind: Service
        name: ${REDASH_NAME}-web
      port:
        targetPort: redash

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${REDASH_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        name: ${REDASH_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${REDASH_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: '${REDASH_NAME}-postgresql'
                  key: POSTGRESQL_USER
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '${REDASH_NAME}-postgresql'
                  key: POSTGRESQL_PASSWORD
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: '${REDASH_NAME}-postgresql'
                  key: POSTGRESQL_DATABASE
            name: 'postgresql'
            image: 'dimaskiddo/debian:postgresql-11'
            imagePullPolicy: Always
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${REDASH_POSTGRESQL_MEMORY_LIMIT}
            volumeMounts:
            - name: ${REDASH_NAME}-postgresql-data
              mountPath: /var/lib/pgsql/data
          volumes:
          - name: ${REDASH_NAME}-postgresql-data
            emptyDir: {}
      triggers:
      - type: ConfigChange

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${REDASH_NAME}-redis
    spec:
      replicas: 1
      selector:
        name: ${REDASH_NAME}-redis
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${REDASH_NAME}-redis
        spec:
          containers:
          - capabilities: {}
            env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '${REDASH_NAME}-redis'
                  key: REDIS_PASSWORD
            name: 'redis'
            image: 'dimaskiddo/alpine:redis-6.2'
            imagePullPolicy: Always
            ports:
            - containerPort: 6379
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 6379
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${REDASH_REDIS_MEMORY_LIMIT}
            volumeMounts:
            - name: ${REDASH_NAME}-redis-data
              mountPath: /var/lib/redis/data
          volumes:
          - name: ${REDASH_NAME}-redis-data
            emptyDir: {}
      triggers:
      - type: ConfigChange

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: "${REDASH_NAME}-web"
      label:
        name: "${REDASH_NAME}-web"
    spec:
      replicas: 1
      selector:
        name: "${REDASH_NAME}-web"
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: "${REDASH_NAME}-web"
        spec:
          containers:
            - env:
                - name: PYTHONUNBUFFERED
                  value: '0'
                - name: REDASH_LOG_LEVEL
                  value: 'INFO'
                - name: REDASH_HOST
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_HOST
                - name: REDASH_REDIS_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_REDIS_URL
                - name: REDASH_DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_DATABASE_URL
                - name: REDASH_COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_COOKIE_SECRET
                - name: REDASH_MAIL_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_SERVER
                - name: REDASH_MAIL_PORT
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PORT
                - name: REDASH_MAIL_USE_TLS
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_TLS
                - name: REDASH_MAIL_USE_SSL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_SSL
                - name: REDASH_MAIL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USERNAME
                - name: REDASH_MAIL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PASSWORD
                - name: REDASH_MAIL_DEFAULT_SENDER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_DEFAULT_SENDER
                - name: REDASH_WEB_WORKERS
                  value: '2'
              name: "redash-web"
              image: 'dimaskiddo/debian:redash-7.0'
              imagePullPolicy: Always
              ports:
                - containerPort: 5000
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 5000
                timeoutSeconds: 1
              resources:
                limits:
                  memory: ${REDASH_MEMORY_LIMIT}
      triggers:
        - type: ConfigChange

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: "${REDASH_NAME}-scheduler"
      label:
        name: "${REDASH_NAME}-scheduler"
    spec:
      replicas: 1
      selector:
        name: "${REDASH_NAME}-scheduler"
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: "${REDASH_NAME}-scheduler"
        spec:
          containers:
            - env:
                - name: PYTHONUNBUFFERED
                  value: '0'
                - name: REDASH_LOG_LEVEL
                  value: 'INFO'
                - name: REDASH_HOST
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_HOST
                - name: REDASH_REDIS_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_REDIS_URL
                - name: REDASH_DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_DATABASE_URL
                - name: REDASH_COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_COOKIE_SECRET
                - name: REDASH_MAIL_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_SERVER
                - name: REDASH_MAIL_PORT
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PORT
                - name: REDASH_MAIL_USE_TLS
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_TLS
                - name: REDASH_MAIL_USE_SSL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_SSL
                - name: REDASH_MAIL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USERNAME
                - name: REDASH_MAIL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PASSWORD
                - name: REDASH_MAIL_DEFAULT_SENDER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_DEFAULT_SENDER
                - name: QUEUES
                  value: 'celery'
                - name: WORKERS_COUNT
                  value: '1'
              name: "redash-scheduler"
              image: 'dimaskiddo/debian:redash-7.0'
              imagePullPolicy: Always
              command: 
                - "redash"
              args:
                - "scheduler"
              resources:
                limits:
                  memory: ${REDASH_MEMORY_LIMIT}
      triggers:
        - type: ConfigChange

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: "${REDASH_NAME}-adhoc"
      label:
        name: "${REDASH_NAME}-adhoc"
    spec:
      replicas: 1
      selector:
        name: "${REDASH_NAME}-adhoc"
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: "${REDASH_NAME}-adhoc"
        spec:
          containers:
            - env:
                - name: PYTHONUNBUFFERED
                  value: '0'
                - name: REDASH_LOG_LEVEL
                  value: 'INFO'
                - name: REDASH_HOST
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_HOST
                - name: REDASH_REDIS_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_REDIS_URL
                - name: REDASH_DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_DATABASE_URL
                - name: REDASH_COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_COOKIE_SECRET
                - name: REDASH_MAIL_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_SERVER
                - name: REDASH_MAIL_PORT
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PORT
                - name: REDASH_MAIL_USE_TLS
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_TLS
                - name: REDASH_MAIL_USE_SSL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_SSL
                - name: REDASH_MAIL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USERNAME
                - name: REDASH_MAIL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PASSWORD
                - name: REDASH_MAIL_DEFAULT_SENDER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_DEFAULT_SENDER
                - name: QUEUES
                  value: 'queries'
                - name: WORKERS_COUNT
                  value: '2'
              name: "redash-adhoc"
              image: 'dimaskiddo/debian:redash-7.0'
              imagePullPolicy: Always
              command: 
                - "redash"
              args:
                - "worker"
              resources:
                limits:
                  memory: ${REDASH_MEMORY_LIMIT}
      triggers:
        - type: ConfigChange

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: "${REDASH_NAME}-worker"
      label:
        name: "${REDASH_NAME}-worker"
    spec:
      replicas: 1
      selector:
        name: "${REDASH_NAME}-worker"
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: "${REDASH_NAME}-worker"
        spec:
          containers:
            - env:
                - name: PYTHONUNBUFFERED
                  value: '0'
                - name: REDASH_LOG_LEVEL
                  value: 'INFO'
                - name: REDASH_HOST
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_HOST
                - name: REDASH_REDIS_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_REDIS_URL
                - name: REDASH_DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_DATABASE_URL
                - name: REDASH_COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_COOKIE_SECRET
                - name: REDASH_MAIL_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_SERVER
                - name: REDASH_MAIL_PORT
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PORT
                - name: REDASH_MAIL_USE_TLS
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_TLS
                - name: REDASH_MAIL_USE_SSL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_SSL
                - name: REDASH_MAIL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USERNAME
                - name: REDASH_MAIL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PASSWORD
                - name: REDASH_MAIL_DEFAULT_SENDER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_DEFAULT_SENDER
                - name: QUEUES
                  value: 'scheduled_queries,schemas'
                - name: WORKERS_COUNT
                  value: '1'
              name: "redash-worker"
              image: 'dimaskiddo/debian:redash-7.0'
              imagePullPolicy: Always
              command: 
                - "redash"
              args:
                - "worker"
              resources:
                limits:
                  memory: ${REDASH_MEMORY_LIMIT}
      triggers:
        - type: ConfigChange

  - apiVersion: batch/v1
    kind: Job
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${REDASH_NAME}-migrate
    spec:
      selector:
        name: "${REDASH_NAME}-migrate"
      parallelism: 1    
      completions: 1    
      template:         
        metadata:
          labels:
            name: "${REDASH_NAME}-migrate"
        spec:
          containers:
            - env:
                - name: PYTHONUNBUFFERED
                  value: '0'
                - name: REDASH_LOG_LEVEL
                  value: 'INFO'
                - name: REDASH_HOST
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_HOST
                - name: REDASH_REDIS_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_REDIS_URL
                - name: REDASH_DATABASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_DATABASE_URL
                - name: REDASH_COOKIE_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-config'
                      key: REDASH_COOKIE_SECRET
                - name: REDASH_MAIL_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_SERVER
                - name: REDASH_MAIL_PORT
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PORT
                - name: REDASH_MAIL_USE_TLS
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_TLS
                - name: REDASH_MAIL_USE_SSL
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USE_SSL
                - name: REDASH_MAIL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_USERNAME
                - name: REDASH_MAIL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_PASSWORD
                - name: REDASH_MAIL_DEFAULT_SENDER
                  valueFrom:
                    secretKeyRef:
                      name: '${REDASH_NAME}-mailer'
                      key: REDASH_MAIL_DEFAULT_SENDER
              name: 'redash-migrate'
              image: 'dimaskiddo/debian:redash-7.0'
              imagePullPolicy: Always
              command: 
                - "redash"
              args:
                - "create_db"
          restartPolicy: OnFailure