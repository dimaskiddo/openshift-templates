kind: Template
apiVersion: v1
metadata:
  name: file-drive-persistent
  annotations:
    openshift.io/display-name: 'File Drive'
    description: "File Drive. You must have persistent volumes available in your cluster to use this template."
    tags: "storage,filedrive"
    iconClass: "fa fa-folder"

parameters:
  - name: FILE_DRIVE_NAME
    displayName: "File Drive Name"
    description: "A reference to File Drive name."
    from: "[a-zA-Z0-9]{10}"
    value: "drive"
    required: true

  - name: FILE_DRIVE_BRANDING_NAME
    displayName: "File Drive Branding Name"
    description: "A reference to File Drive branding name."

  - name: FILE_DRIVE_ADMIN_USERNAME
    displayName: "File Drive Admin Username"
    description: "A reference to File Drive admin username."
    from: "admin[A-Z0-9]{3}"
    generate: expression
    required: true

  - name: FILE_DRIVE_ADMIN_PASSWORD
    displayName: "File Drive Admin Password"
    description: "A reference to File Drive admin password."
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    required: true

  - name: FILE_DRIVE_DOMAIN_URL
    displayName: "File Drive Domain URL"
    description: "A reference to File Drive domain URL."
    from: "[a-zA-Z0-9]{100}"

  - name: FILE_DRIVE_VOLUME_CAPACITY
    displayName: "File Drive Volume Capacity"
    description: "Volume space available for File Drive data, e.g. 512Mi, 2Gi."
    value: "1Gi"
    required: true

objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-file-drive-admin-username: '{.data[''admin-username'']}'
        template.openshift.io/expose-file-drive-admin-password: '{.data[''admin-password'']}'
      name: '${FILE_DRIVE_NAME}'
    stringData:
      admin-username: '${FILE_DRIVE_ADMIN_USERNAME}'
      admin-password: '${FILE_DRIVE_ADMIN_PASSWORD}'

  - kind: Service
    apiVersion: v1
    metadata:
      name: "${FILE_DRIVE_NAME}"
    spec:
      ports:
        - name: "file-drive-http"
          port: "8080"
      selector:
        name: "${FILE_DRIVE_NAME}"

  - kind: Route
    apiVersion: v1
    metadata:
      name: "${FILE_DRIVE_NAME}"
    spec:
      host: ${FILE_DRIVE_DOMAIN_URL}
      to:
        kind: Service
        name: ${FILE_DRIVE_NAME}
      port:
        targetPort: file-drive-http

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${FILE_DRIVE_NAME}"
      label:
        name: "${FILE_DRIVE_NAME}"
    spec:
      replicas: 1
      selector:
        name: "${FILE_DRIVE_NAME}"
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: "${FILE_DRIVE_NAME}"
        spec:
          containers:
            - env:
              - name: 'FB_BRANDING_NAME'
                value: '${FILE_DRIVE_BRANDING_NAME}'
              - name: 'FB_USERNAME'
                valueFrom:
                  secretKeyRef:
                    name: '${FILE_DRIVE_NAME}'
                    key: admin-username
              - name: 'FB_PASSWORD'
                valueFrom:
                  secretKeyRef:
                    name: '${FILE_DRIVE_NAME}'
                    key: admin-password
              name: "${FILE_DRIVE_NAME}"
              image: 'telkomindonesia/alpine:filebrowser-2.0'
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
                  protocol: TCP
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8080
                timeoutSeconds: 1
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8080
                timeoutSeconds: 1
              volumeMounts:
                - name: file-drive-data
                  mountPath: "/data/filebrowser"
          volumes:
            - name: file-drive-data
              persistentVolumeClaim:
                claimName: ${FILE_DRIVE_NAME}
      test: false
      triggers:
        - type: ConfigChange

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${FILE_DRIVE_NAME}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${FILE_DRIVE_VOLUME_CAPACITY}'
