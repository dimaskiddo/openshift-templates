kind: Template
apiVersion: v1
metadata:
  name: mssql-ephemeral
  annotations:
    openshift.io/display-name: 'Microsoft SQL Server (Ephemeral)'
    description: "Microsoft SQL Server. This template will create service without persistent storage."
    tags: "database,microsoft,sql,server"
    iconClass: "fa fa-windows"

parameters:
  - name: MSSQL_NAME
    displayName: "Microsoft SQL Server Name"
    description: "A reference to Microsoft SQL Server name."
    from: "[a-zA-Z0-9]{10}"
    value: "mssql"
    required: true

  - name: MSSQL_SA_PASSWORD
    displayName: "Microsoft SQL Server Access SA password"
    description: "A reference to Microsoft SQL Server SA password."
    from: "[a-zA-Z0-9]{20}"
    generate: expression
    required: true

  - name: MSSQL_MEMORY_LIMIT
    displayName: "Microsoft SQL Server Memory Limit"
    description: "Maximum amount of memory the Microsoft SQL Server can use, e.g. 512Mi, 2Gi."
    value: "1Gi"
    required: true

objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: '${MSSQL_NAME}'
    stringData:
      MSSQL_SA_PASSWORD: '${MSSQL_SA_PASSWORD}'

  - kind: Service
    apiVersion: v1
    metadata:
      name: "${MSSQL_NAME}"
    spec:
      ports:
        - name: "sql-server"
          port: "1433"
      selector:
        name: "${MSSQL_NAME}"

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${MSSQL_NAME}"
      label:
        name: "${MSSQL_NAME}"
    spec:
      replicas: 1
      selector:
        name: "${MSSQL_NAME}"
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: "${MSSQL_NAME}"
        spec:
          containers:
            - env:
              - name: MSSQL_SA_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: '${MSSQL_NAME}'
                    key: MSSQL_SA_PASSWORD
              name: 'mssql'
              image: 'dimaskiddo/debian:mssql-2017'
              imagePullPolicy: Always
              ports:
                - containerPort: 1433
                  protocol: TCP
              resources:
                limits:
                  memory: ${MSSQL_MEMORY_LIMIT}
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 1443
                timeoutSeconds: 1
              volumeMounts:
                - name: mssql-data
                  mountPath: "/var/opt/mssql"
          volumes:
            - name: mssql-data
              emptyDir: {}
      triggers:
        - type: ConfigChange
